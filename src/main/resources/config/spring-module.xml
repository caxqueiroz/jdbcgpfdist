<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/>


    <bean class="io.pivotal.spring.xd.jdbcgpfdist.config.Config">
        <property name="jdbcDataSource" ref="jdbcDataSource"/>
    </bean>

    <bean id="sqlTaskScheduler" class="org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler">
        <property name="waitForTasksToCompleteOnShutdown" value="true" />
        <property name="awaitTerminationSeconds" value="${batchTimeout}" />
    </bean>


    <bean id="greenplumControlFile" class="org.springframework.xd.greenplum.support.ControlFileFactoryBean">
        <property name="controlFileResource" value="${controlFile:}" />
    </bean>

    <bean id="greenplumLoad" class="org.springframework.xd.greenplum.support.LoadFactoryBean">
        <property name="loadConfiguration" ref="greenplumLoadConfiguration" />
        <property name="dataSource" ref="gpdbDataSource" />
    </bean>

    <bean id="greenplumLoadConfiguration" class="org.springframework.xd.greenplum.support.LoadConfigurationFactoryBean">
        <property name="externalTable" ref="greenplumReadableTable" />
        <property name="controlFile" ref="greenplumControlFile" />
        <property name="mode" value="${mode:INSERT}" />
        <property name="updateColumns" value="${updateColumns:}" />
        <property name="matchColumns" value="${matchColumns:}" />
        <property name="table" value="${table:}" />
        <property name="sqlBefore" value="${sqlBefore:}" />
        <property name="sqlAfter" value="${sqlAfter:}" />
    </bean>

    <bean id="greenplumReadableTable" class="org.springframework.xd.greenplum.support.ReadableTableFactoryBean">
        <property name="controlFile" ref="greenplumControlFile" />
        <property name="delimiter" value="${columnDelimiter:}" />
        <property name="locations" value="#{T(org.springframework.xd.greenplum.support.NetworkUtils).getGPFDistUri(${port})}" />
    </bean>

    <bean id="gpdbDataSource" class="org.springframework.xd.greenplum.support.GreenplumDataSourceFactoryBean">
        <property name="controlFile" ref="greenplumControlFile" />
        <property name="dbHost" value="${dbHost}" />
        <property name="dbName" value="${dbName}" />
        <property name="dbUser" value="${dbUser}" />
        <property name="dbPassword" value="${dbPassword}" />
        <property name="dbPort" value="${dbPort}" />
    </bean>

    <bean id="gpfdist" class="io.pivotal.spring.xd.jdbcgpfdist.gpfdist.GPFDistMessageHandler">
        <constructor-arg value="${port}"/>
        <constructor-arg value="${flushCount}"/>
        <constructor-arg value="${flushTime}"/>
        <constructor-arg value="${batchTimeout}"/>
        <constructor-arg value="${batchCount}"/>
        <constructor-arg value="${batchPeriod}"/>
        <constructor-arg value="${delimiter}"/>
        <property name="rateInterval" value="${rateInterval}" />
        <property name="greenplumLoad" ref="greenplumLoad" />
        <property name="sqlTaskScheduler" ref="sqlTaskScheduler" />
    </bean>


    <bean id="jdbcDataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbcDriverClassName}" />
        <property name="url" value="${jdbcUrl}" />
        <property name="username" value="${jdbcUsername}" />
        <property name="password" value="${jdbcPassword}" />
    </bean>

    <batch:job id="job">
        <batch:step id="loadData">
            <batch:tasklet>
                <batch:chunk reader="itemReader" writer="itemWriter" commit-interval="1" retry-limit="1">
                    <batch:retryable-exception-classes>
                        <batch:include class="org.springframework.batch.item.ItemReaderException"/>
                    </batch:retryable-exception-classes>
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="itemReader" class="org.springframework.batch.item.database.JdbcCursorItemReader">
        <property name="dataSource" ref="jdbcDataSource"/>
        <property name="sql" value="${sqlQuery}"/>
        <property name="rowMapper">
            <bean class="io.pivotal.spring.xd.jdbcgpfdist.jdbc.CustomRowMapper"/>
        </property>

    </bean>

    <bean id="itemWriter" class="io.pivotal.spring.xd.jdbcgpfdist.GPFDistItemWriter">
        <constructor-arg value="gpfdist"/>
    </bean>


</beans>